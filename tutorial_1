import pandas as pd  # Importing pandas library for data manipulation
import numpy as np  # Importing numpy for numerical operations
import statsmodels.api as sm  # Importing statsmodels for statistical modeling

# Creating a DataFrame from the provided advertising dataset
data = pd.read_csv("Advertising.csv")

"""DataFrame({
    'TV': [230.1, 44.5, 17.2, 151.5, 180.8, 8.7, 57.5, 120.2, 8.6, 199.8,
           66.1, 214.7, 23.8, 97.5, 204.1, 195.4, 67.8, 281.4, 69.2, 147.3],  # TV advertising budget
    'Radio': [37.8, 39.3, 45.9, 41.3, 10.8, 48.9, 32.8, 19.6, 2.1, 2.6,
              5.8, 24.0, 35.1, 7.6, 32.9, 47.7, 36.6, 39.6, 20.5, 23.9],  # Radio advertising budget
    'Newspaper': [69.2, 45.1, 69.3, 58.5, 58.4, 75.0, 23.5, 11.6, 1.0, 21.2,
                  24.2, 4.0, 65.9, 7.2, 46.0, 52.9, 114.0, 55.8, 18.3, 19.1],  # Newspaper advertising budget
    'Sales': [22.1, 10.4, 9.3, 18.5, 12.9, 7.2, 11.8, 13.2, 4.8, 10.6,
              8.6, 17.4, 9.2, 9.7, 19.0, 22.4, 12.5, 24.4, 11.3, 14.6]  # Sales output
})"""

# Defining independent variables (TV, Radio, Newspaper)
X = data[['TV', 'radio', 'newspaper']]
X = sm.add_constant(X)  # Adding a constant term for the intercept

# Defining dependent variable (Sales)
Y = data['sales']

# Fitting the multiple linear regression model
model = sm.OLS(Y, X).fit()

# Calculating R-squared value to measure model goodness-of-fit
r_squared = model.rsquared

# Calculating F-statistic and its p-value
f_statistic = model.fvalue
f_pvalue = model.f_pvalue

# Calculating Residual Standard Error (RSE) using root mean squared error
rse = np.sqrt(model.mse_resid)

# Printing results
print(f'R-squared: {r_squared}')  # Printing R-squared value
print(f'F-statistic: {f_statistic}, p-value: {f_pvalue}')  # Printing F-statistic and p-value
print(f'Residual Standard Error (RSE): {rse}')  # Printing Residual Standard Error
